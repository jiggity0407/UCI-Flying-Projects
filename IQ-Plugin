function IQPlugin() {
  return function install(openmct) {
    openmct.types.addType('IQ-Request', {
      key: 'IQ-Request',
      name: 'I/Q Request',
      description: 'Request IQ data',
      creatable: true,
      //icon for plugin//
      cssClass: 'icon-database-query'
    });

    const IQFormView = {
      key: 'iq-request-form',
      name: 'IQ Request Form',
      canView: function (domainObject) {
        return domainObject.type === 'IQ-Request';
      },
      canEdit: function (domainObject) {
        return domainObject.type === 'IQ-Request';
      },
      view: function (domainObject) {
        let container;
        return {
          show: function (el) {
            container = el;
            container.innerHTML = `<form id="iqForm" style="padding: 10px; max-width: 400px;">
                <label id="Directory">Directory: <input type="text" name="Directory" required></label><br><br>
                <label id="cesiumLocation">cesiumLocation: <input type="text" name="cesiumLocation" required></label><br><br>
                <label id="accessToken">accessToken: <input type="text" name="accessToken" required></label><br><br>
                <label>Comments:<br>
                  <textarea name="comments" rows="4" style="width: 100%;"></textarea>
                </label><br><br>
<button type="submit" style="background-color: #007fad; color: black;">Submit Request</button>
              </form>`;
            const form = container.querySelector('#iqForm');
            form.addEventListener('submit', async (e) => {
              e.preventDefault();

              const formData = new FormData(form);
              const formDataSerialized = Object.fromEntries(formData);
              const jsonStringData = JSON.stringify(formDataSerialized);

              try {
                const response = await fetch('http://localhost:5000/iq-pipeline', {
                  method: 'POST',
                  body: jsonStringData,
                  headers: {
                    'Content-Type': 'application/json'
                  }
                });

                alert('LOADING...');

                if (!response.ok) {
                  throw new Error('Server error');
                }

                form.reset();

                const json = await response.json();
              } catch (e) {
                //console.error(e);
                //alert('Error detected'); // Improved error feedback
              }
            });
          },
          destroy: function () {
            container.innerHTML = '';
          }
        };
      }
    };
    openmct.objectViews.addProvider(IQFormView);
  };
}

export default IQPlugin;
